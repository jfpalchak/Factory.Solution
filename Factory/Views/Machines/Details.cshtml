@{
  Layout = "_Layout";
}

@model Factory.Models.Machine
@using Factory.Models;

<h5>Factory > Machines > @Model.Model</h5>
<hr/>
<h2>Machine Details</h2>
<h3>@Html.DisplayNameFor(model => model.Model): @Html.DisplayFor(model => model.Model)</h3>
<h3>Machine Id: @Html.DisplayFor(model => model.MachineId)</h3>
<hr/>

<div class="row justify-content-around">
  <div class="col-3 stack">

    <div class="links container">
      <br/>
      <h5>@Html.ActionLink("Add an Engineer", "AddEngineer", new { id = Model.MachineId })</h5>
      <br/>
      <h5>@Html.ActionLink("Edit Machine", "Edit", new { id = Model.MachineId })</h5>
      <h5>@Html.ActionLink("Remove Machine", "Delete", new { id = Model.MachineId })</h5>
    </div>

  </div>

  <div class="col-6 details list-display stack">

    <h2>Licensed Engineers:</h2>

    @if (Model.JoinEntities.Count == 0)
    {
      <p>@Model.Model is not currently licensed to any engineers.</p>
    }
    else
    {
      @foreach (EngineerMachine join in Model.JoinEntities)
      {
        @using (Html.BeginForm("DeleteJoin", "Machines"))
        {
          <h4>
            <li>
              <div class="row">
                <div class="col">
                  @Html.ActionLink(join.Engineer.Name, "Details", "Engineers", new { id = join.Engineer.EngineerId })
                </div>
                <div class="col-1">
                  @Html.Hidden("joinId", @join.EngineerMachineId)
                  <input type="submit" value="X" class="btn btn-sm btn-x btn-outline-danger"/>
                </div>
              </div>
            </li>
          </h4>
        }
      }
    }

  </div>
</div>